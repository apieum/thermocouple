#include <Thermo.h>

TempCoefs TypeE = {

    { -20.0, 70.0, 2.5000000E+01, 1.4950582E+00, 6.0958443E-02, -2.7351789E-04, -1.9130146E-05, -1.3948840E-08, -5.2382378E-03, -3.0970168E-04 },
    {
        { -9.835, -5.237, -270.0, -100.0, -1.1721668E+02, -5.9901698E+00, 2.3647275E+01, 1.2807377E+01, 2.0665069E+00, 8.6513472E-02, 5.8995860E-01, 1.0960713E-01, 6.1769588E-03},
        { -5.237, 0.591, -100.0, 10.0, -5.0000000E+01, -2.7871777E+00, 1.9022736E+01, -1.7042725E+00, -3.5195189E-01, 4.7766102E-03, -6.5379760E-02, -2.1732833E-02, 0.0},
        { 0.591, 24.964, 10.0, 350.0, 2.5014600E+02, 1.7191713E+01, 1.3115522E+01, 1.1780364E+00, 3.6422433E-02, 3.9584261E-04, 9.3112756E-02, 2.9804232E-03, 3.3263032E-05},
        { 24.964, 53.112, 350.0, 700.0, 6.0139890E+02,  4.5206167E+01, 1.2399357E+01, 4.3399963E-01, 9.1967085E-03,  1.6901585E-04,  3.4424680E-02,  6.9741215E-04,  1.2946992E-05},
        { 53.112, 76.373, 700.0, 1000.0, 8.0435911E+02,  6.1359178E+01, 1.2759508E+01, -1.1116072E+00,  3.5332536E-02,  3.3080380E-05,  -8.8196889E-02,  2.8497415E-03, 0.0}
    }
};



Celsius::operator Kelvin() {
    return Kelvin(temp  + 273.150);
};
Kelvin::operator Celsius() {
    return Celsius(temp - 273.150);
};
bool operator==(const HotCoef& lhs, const HotCoef& rhs)
{
    return lhs.min_temp == rhs.min_temp
        && lhs.max_temp == rhs.max_temp
        && lhs.To == rhs.To
        && lhs.Vo == rhs.Vo
        && lhs.p1 == rhs.p1
        && lhs.p2 == rhs.p2
        && lhs.p3 == rhs.p3
        && lhs.p4 == rhs.p4
        && lhs.q1 == rhs.q1
        && lhs.q2 == rhs.q2;
};
